# Generated by Django 2.0.4 on 2018-04-09 07:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bettingoffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcomefk', models.PositiveIntegerField(db_column='outcomeFK')),
                ('odds_providerfk', models.PositiveIntegerField(db_column='odds_providerFK')),
                ('odds', models.FloatField()),
                ('odds_old', models.FloatField()),
                ('active', models.CharField(max_length=3)),
                ('is_back', models.CharField(max_length=3)),
                ('is_single', models.CharField(max_length=3)),
                ('is_live', models.CharField(max_length=3)),
                ('volume', models.IntegerField()),
                ('currency', models.CharField(max_length=4)),
                ('couponkey', models.CharField(db_column='couponKey', max_length=255)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'bettingoffer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('enetid', models.PositiveIntegerField(db_column='enetID')),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('name_id', models.CharField(blank=True, max_length=50, null=True)),
                ('name_th', models.CharField(blank=True, max_length=50, null=True)),
                ('name_vi', models.CharField(blank=True, max_length=50, null=True)),
                ('name_pt', models.CharField(blank=True, max_length=50, null=True)),
                ('name_ko', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryAdBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=8)),
                ('weight', models.IntegerField()),
                ('country_cd', models.CharField(max_length=2)),
                ('os', models.CharField(max_length=7)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('ut', models.DateTimeField()),
                ('advertiser', models.CharField(blank=True, max_length=45, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('image_link', models.CharField(blank=True, max_length=255, null=True)),
                ('ad_type', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'curry_ad_balance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryExposePostLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=45)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'curry_expose_post_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryExposeTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'curry_expose_target',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryFollowingCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('following', models.IntegerField()),
                ('count', models.BigIntegerField()),
                ('type', models.CharField(max_length=2)),
                ('league', models.CharField(blank=True, max_length=50, null=True)),
                ('team', models.CharField(blank=True, max_length=50, null=True)),
                ('teams_league', models.CharField(blank=True, max_length=50, null=True)),
                ('player', models.CharField(blank=True, max_length=50, null=True)),
                ('players_team', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'curry_following_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryInfoDbModify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField()),
                ('type', models.CharField(max_length=2)),
                ('migrate_item', models.IntegerField(blank=True, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('ut', models.DateTimeField()),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'curry_info_db_modify',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryInfoImageModify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField()),
                ('type', models.CharField(max_length=2)),
                ('desc', models.TextField(blank=True, null=True)),
                ('ut', models.DateTimeField()),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'curry_info_image_modify',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name', models.CharField(blank=True, max_length=30, null=True)),
                ('name_ko', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name_ko', models.CharField(blank=True, max_length=30, null=True)),
                ('name_th', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name_th', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.IntegerField(blank=True, null=True)),
                ('social', models.CharField(blank=True, max_length=255, null=True)),
                ('draft', models.CharField(blank=True, max_length=30, null=True)),
                ('school', models.CharField(blank=True, max_length=50, null=True)),
                ('ut', models.DateTimeField()),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'curry_player',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurryRdsScaleModifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('number', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(max_length=9)),
                ('ut', models.DateTimeField()),
                ('user', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'curry_rds_scale_modifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomListManagerLineupNationalTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('manager_id', models.IntegerField(blank=True, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=50, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'custom_list_manager_lineup_national_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomListManagerLineupTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('manager_id', models.IntegerField(blank=True, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=50, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'custom_list_manager_lineup_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomListManagerNt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('manager_id', models.IntegerField(blank=True, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=50, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'custom_list_manager_nt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomListManagerT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('manager_id', models.IntegerField(blank=True, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=50, null=True)),
                ('team_id', models.IntegerField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'custom_list_manager_t',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Draw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('object_typefk', models.IntegerField(db_column='object_typeFK')),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('draw_typefk', models.IntegerField(db_column='draw_typeFK')),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'draw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrawConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('drawfk', models.IntegerField(db_column='drawFK')),
                ('value', models.CharField(max_length=255)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'draw_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrawDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawfk', models.IntegerField(db_column='drawFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('rank', models.CharField(max_length=5)),
                ('value', models.CharField(max_length=5)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'draw_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrawEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('drawfk', models.IntegerField(db_column='drawFK')),
                ('round_typefk', models.IntegerField(db_column='round_typeFK')),
                ('draw_eventfk', models.IntegerField(db_column='draw_eventFK')),
                ('draw_order', models.IntegerField()),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'draw_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrawEventDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draw_eventfk', models.IntegerField(db_column='draw_eventFK')),
                ('object_typefk', models.IntegerField(db_column='object_typeFK')),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('rank', models.IntegerField()),
                ('draw_event_detailfk', models.IntegerField(db_column='draw_event_detailFK')),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'draw_event_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrawEventParticipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draw_eventfk', models.IntegerField(db_column='draw_eventFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('number', models.IntegerField()),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'draw_event_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrawType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'draw_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('tournament_stagefk', models.PositiveIntegerField(db_column='tournament_stageFK')),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('eventstatusfk', models.PositiveIntegerField(db_column='eventstatusFK')),
                ('status_type', models.CharField(max_length=11)),
                ('status_descfk', models.PositiveIntegerField(db_column='status_descFK')),
                ('enetid', models.IntegerField(db_column='enetID')),
                ('enetsportid', models.CharField(blank=True, db_column='enetSportID', max_length=2, null=True)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('locked', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventIncident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventfk', models.PositiveIntegerField(db_column='eventFK')),
                ('sportfk', models.PositiveIntegerField(db_column='sportFK')),
                ('event_incident_typefk', models.PositiveIntegerField(db_column='event_incident_typeFK')),
                ('enetid', models.IntegerField(blank=True, db_column='enetID', null=True)),
                ('elapsed', models.IntegerField()),
                ('elapsed_plus', models.IntegerField()),
                ('comment', models.CharField(max_length=50)),
                ('sortorder', models.IntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_incident',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventIncidentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=16)),
                ('event_incidentfk', models.PositiveIntegerField(db_column='event_incidentFK')),
                ('participantfk', models.PositiveIntegerField(db_column='participantFK')),
                ('value', models.CharField(max_length=255)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_incident_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventIncidentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player1', models.CharField(max_length=3)),
                ('player2', models.CharField(max_length=3)),
                ('team', models.CharField(max_length=3)),
                ('comment', models.CharField(max_length=50)),
                ('subtype1', models.CharField(max_length=50)),
                ('subtype2', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=10)),
                ('enetid', models.IntegerField(blank=True, db_column='enetID', null=True)),
                ('comment_type', models.CharField(max_length=50)),
                ('player2_type', models.CharField(max_length=50)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_incident_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventIncidentTypeText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_incident_typefk', models.PositiveIntegerField(db_column='event_incident_typeFK')),
                ('name', models.CharField(max_length=255)),
                ('enetid', models.PositiveIntegerField(db_column='enetID')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_incident_type_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventParticipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('participantfk', models.PositiveIntegerField(db_column='participantFK')),
                ('eventfk', models.PositiveIntegerField(db_column='eventFK')),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'event_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventScope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventfk', models.IntegerField(db_column='eventFK')),
                ('scope_typefk', models.IntegerField(db_column='scope_typeFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_scope',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventScopeDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_scopefk', models.IntegerField(db_column='event_scopeFK')),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_scope_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GreenTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_arn', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'green_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=22)),
                ('objectfk', models.PositiveIntegerField(db_column='objectFK')),
                ('type', models.CharField(max_length=7)),
                ('contenttype', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_participantsfk', models.PositiveIntegerField(db_column='event_participantsFK')),
                ('incident_typefk', models.PositiveIntegerField(db_column='incident_typeFK')),
                ('incident_code', models.CharField(max_length=9)),
                ('enetid', models.IntegerField(blank=True, db_column='enetID', null=True)),
                ('enetsportid', models.CharField(blank=True, db_column='enetSportID', max_length=2, null=True)),
                ('elapsed', models.IntegerField()),
                ('sortorder', models.IntegerField()),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ref_participantfk', models.PositiveIntegerField(db_column='ref_participantFK')),
            ],
            options={
                'db_table': 'incident',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IncidentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('subtype', models.CharField(max_length=8)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'incident_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(blank=True, max_length=24, null=True)),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('language_typefk', models.IntegerField(db_column='language_typeFK')),
                ('name', models.CharField(max_length=255)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('locked', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'language',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LanguageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'language_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lineup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_participantsfk', models.PositiveIntegerField(db_column='event_participantsFK')),
                ('participantfk', models.PositiveIntegerField(db_column='participantFK')),
                ('lineup_typefk', models.PositiveIntegerField(db_column='lineup_typeFK')),
                ('shirt_number', models.PositiveIntegerField()),
                ('pos', models.IntegerField()),
                ('enet_pos', models.PositiveIntegerField()),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'lineup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LineupScopeResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lineupfk', models.IntegerField(db_column='lineupFK')),
                ('event_scopefk', models.IntegerField(db_column='event_scopeFK')),
                ('scope_data_typefk', models.IntegerField(db_column='scope_data_typeFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lineup_scope_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LineupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'lineup_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveoddsBettingoffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=19)),
                ('objectfk', models.PositiveIntegerField(db_column='objectFK')),
                ('odds_providerfk', models.PositiveIntegerField(db_column='odds_providerFK')),
                ('liveodds_typefk', models.IntegerField(db_column='liveodds_typeFK')),
                ('liveodds_subtypefk', models.PositiveIntegerField(db_column='liveodds_subtypeFK')),
                ('liveodds_scopefk', models.IntegerField(db_column='liveodds_scopeFK')),
                ('liveodds_statusfk', models.PositiveIntegerField(db_column='liveodds_statusFK')),
                ('iparam1', models.IntegerField()),
                ('iparam2', models.IntegerField()),
                ('dparam1', models.FloatField()),
                ('dparam2', models.FloatField()),
                ('sparam', models.CharField(max_length=20)),
                ('value', models.FloatField()),
                ('value_old', models.FloatField()),
                ('n', models.PositiveIntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'liveodds_bettingoffer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveoddsBettingofferAverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=19)),
                ('objectfk', models.PositiveIntegerField(db_column='objectFK')),
                ('liveodds_typefk', models.IntegerField(db_column='liveodds_typeFK')),
                ('liveodds_subtypefk', models.PositiveIntegerField(db_column='liveodds_subtypeFK')),
                ('liveodds_scopefk', models.IntegerField(db_column='liveodds_scopeFK')),
                ('liveodds_statusfk', models.IntegerField(db_column='liveodds_statusFK')),
                ('iparam1', models.IntegerField()),
                ('iparam2', models.IntegerField()),
                ('dparam1', models.FloatField()),
                ('dparam2', models.FloatField()),
                ('sparam', models.CharField(max_length=20)),
                ('value', models.FloatField()),
                ('value_old', models.FloatField()),
                ('n', models.PositiveIntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'liveodds_bettingoffer_average',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveoddsScope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('n', models.PositiveIntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'liveodds_scope',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveoddsStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('n', models.PositiveIntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'liveodds_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveoddsSubtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('n', models.PositiveIntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'liveodds_subtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveoddsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('n', models.PositiveIntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'liveodds_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectParticipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(blank=True, max_length=19, null=True)),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('participantfk', models.PositiveIntegerField(db_column='participantFK')),
                ('participant_type', models.CharField(max_length=9)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('active', models.CharField(max_length=3)),
                ('enetid', models.PositiveIntegerField(db_column='enetID')),
                ('enetsportid', models.CharField(blank=True, db_column='enetSportID', max_length=2, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'object_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'object_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OddsProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('countryfk', models.PositiveIntegerField(db_column='countryFK')),
                ('bookmaker', models.CharField(max_length=3)),
                ('preferred', models.CharField(max_length=3)),
                ('betex', models.CharField(max_length=3)),
                ('active', models.CharField(max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'odds_provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OffenceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'offence_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=19)),
                ('objectfk', models.PositiveIntegerField(db_column='objectFK')),
                ('type', models.CharField(max_length=6)),
                ('event_participant_number', models.IntegerField()),
                ('scope', models.CharField(max_length=3)),
                ('subtype', models.CharField(max_length=8)),
                ('iparam', models.IntegerField()),
                ('iparam2', models.IntegerField()),
                ('dparam', models.FloatField()),
                ('dparam2', models.FloatField()),
                ('sparam', models.CharField(max_length=20)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'outcome',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=9)),
                ('type', models.CharField(max_length=12)),
                ('countryfk', models.PositiveIntegerField(db_column='countryFK')),
                ('enetid', models.PositiveIntegerField(db_column='enetID')),
                ('enetsportid', models.CharField(blank=True, db_column='enetSportID', max_length=2, null=True)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'participant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=22)),
                ('objectfk', models.PositiveIntegerField(db_column='objectFK')),
                ('type', models.CharField(max_length=17)),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=19)),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('refers_to', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('reference_typefk', models.IntegerField(db_column='reference_typeFK')),
            ],
            options={
                'db_table': 'reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reference_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_participantsfk', models.PositiveIntegerField(db_column='event_participantsFK')),
                ('result_typefk', models.PositiveIntegerField(db_column='result_typeFK')),
                ('result_code', models.CharField(max_length=16)),
                ('value', models.CharField(max_length=255)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResultType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('code', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'result_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoundType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.IntegerField()),
                ('knockout', models.CharField(max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'round_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SavedXml',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'saved_xml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScopeDataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scope_data_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScopeResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_participantsfk', models.IntegerField(db_column='event_participantsFK')),
                ('event_scopefk', models.IntegerField(db_column='event_scopeFK')),
                ('scope_data_typefk', models.IntegerField(db_column='scope_data_typeFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scope_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScopeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scope_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('enetsportcode', models.CharField(blank=True, db_column='enetSportCode', max_length=2, null=True)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'sport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=19)),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('standing_typefk', models.IntegerField(db_column='standing_typeFK')),
                ('name', models.CharField(max_length=255)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'standing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StandingConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standingfk', models.IntegerField(db_column='standingFK')),
                ('standing_type_paramfk', models.IntegerField(db_column='standing_type_paramFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('value', models.CharField(max_length=255)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('sub_param', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'standing_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StandingData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standing_participantsfk', models.IntegerField(db_column='standing_participantsFK')),
                ('standing_type_paramfk', models.IntegerField(db_column='standing_type_paramFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(max_length=255)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('sub_param', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'standing_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StandingParticipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standingfk', models.IntegerField(db_column='standingFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('rank', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'standing_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StandingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'standing_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StandingTypeParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standing_typefk', models.IntegerField(db_column='standing_typeFK')),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('type', models.CharField(max_length=9)),
                ('value', models.CharField(max_length=255)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'standing_type_param',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_typefk', models.IntegerField(db_column='object_typeFK')),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('statistic_typefk', models.IntegerField(db_column='statistic_typeFK')),
                ('name', models.CharField(max_length=255)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants1fk', models.IntegerField(db_column='statistic_participants1FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants2fk', models.IntegerField(db_column='statistic_participants2FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants3fk', models.IntegerField(db_column='statistic_participants3FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants4fk', models.IntegerField(db_column='statistic_participants4FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants5fk', models.IntegerField(db_column='statistic_participants5FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data5',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants6fk', models.IntegerField(db_column='statistic_participants6FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data6',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants7fk', models.IntegerField(db_column='statistic_participants7FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data7',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticData8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_participants8fk', models.IntegerField(db_column='statistic_participants8FK')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('statistic_data_type_detailfk', models.IntegerField(db_column='statistic_data_type_detailFK')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data8',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticDataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('statistic_typefk', models.IntegerField(db_column='statistic_typeFK')),
                ('statistic_data_type_categoryfk', models.IntegerField(db_column='statistic_data_type_categoryFK')),
                ('code', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticDataTypeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data_type_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticDataTypeDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_data_typefk', models.IntegerField(db_column='statistic_data_typeFK')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_data_type_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants4',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants5',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants6',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants7',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticParticipants8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statisticfk', models.IntegerField(db_column='statisticFK')),
                ('participantfk', models.IntegerField(db_column='participantFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_participants8',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statistic_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.CharField(max_length=255)),
                ('rule_type', models.CharField(max_length=11)),
                ('object_type', models.CharField(max_length=6)),
                ('homeaway', models.CharField(max_length=3)),
                ('matchrange', models.CharField(max_length=20)),
                ('h2h', models.CharField(max_length=3)),
                ('sub_param', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=8)),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'stat_rules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatsLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_rulesfk', models.IntegerField(db_column='stat_rulesFK')),
                ('participantfk', models.PositiveIntegerField(db_column='participantFK')),
                ('eventfk', models.PositiveIntegerField(db_column='eventFK')),
                ('teamfk', models.PositiveIntegerField(db_column='teamFK')),
                ('trigger_type', models.CharField(max_length=255)),
                ('matchcount', models.PositiveIntegerField()),
                ('value', models.CharField(max_length=255)),
                ('value_div_matchcount', models.FloatField()),
                ('incidentfk', models.IntegerField(db_column='incidentFK')),
                ('outcomefk', models.IntegerField(db_column='outcomeFK')),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'stats_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatsOdds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_rulesfk', models.IntegerField(db_column='stat_rulesFK')),
                ('param', models.CharField(max_length=20)),
                ('name', models.TextField()),
                ('type', models.CharField(max_length=50)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'stats_odds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusDesc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('enetstatusid', models.PositiveIntegerField(db_column='enetStatusID')),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField()),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('status_type', models.CharField(max_length=11)),
                ('mapto', models.IntegerField(db_column='mapTo')),
            ],
            options={
                'db_table': 'status_desc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuAccount',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
                ('password', models.CharField(blank=True, max_length=64, null=True)),
                ('pf', models.CharField(blank=True, max_length=8, null=True)),
                ('pf_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('pf_user_name', models.CharField(blank=True, max_length=64, null=True)),
                ('pf_user_token', models.CharField(blank=True, max_length=2048, null=True)),
                ('pf_image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('email_confirmed', models.CharField(blank=True, max_length=3, null=True)),
                ('secret_key', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'su_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuAccountFollowing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField()),
                ('type', models.CharField(max_length=2)),
                ('following', models.IntegerField()),
                ('push_type', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'su_account_following',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuTransaction',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('login_ut', models.DateTimeField(blank=True, null=True)),
                ('logout_ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'su_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('create_tmp', models.DateTimeField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=25, null=True)),
                ('os', models.CharField(blank=True, max_length=10, null=True)),
                ('push_key', models.CharField(blank=True, max_length=1023, null=True)),
                ('aws_endpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('last_login_ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.IntegerField(blank=True, db_column='del', null=True)),
            ],
            options={
                'db_table': 'su_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuUserFollowing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('type', models.CharField(max_length=2)),
                ('following', models.IntegerField()),
                ('push_type', models.IntegerField()),
                ('language', models.CharField(max_length=5)),
                ('ut', models.DateTimeField()),
                ('aws_subscription', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'su_user_following',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=2)),
                ('participant', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(max_length=2)),
                ('text', models.TextField(blank=True, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('account_id', models.IntegerField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsBoardLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=2)),
                ('root_id', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('account_type', models.CharField(max_length=5)),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_board_like',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsBoardLikeDev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=2)),
                ('root_id', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('account_type', models.CharField(max_length=5)),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_board_like_dev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsBoardPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=2)),
                ('participant', models.IntegerField()),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
                ('account_id', models.IntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('like', models.IntegerField()),
                ('img_ext', models.CharField(blank=True, max_length=5, null=True)),
                ('img_rot', models.IntegerField(blank=True, null=True)),
                ('img_width', models.IntegerField(blank=True, null=True)),
                ('img_height', models.IntegerField(blank=True, null=True)),
                ('top', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('edit_time', models.DateTimeField()),
                ('top_time', models.DateTimeField()),
                ('del_field', models.IntegerField(db_column='del')),
            ],
            options={
                'db_table': 'swips_board_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsBoardPostDev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=2)),
                ('participant', models.IntegerField()),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
                ('account_id', models.IntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('like', models.IntegerField()),
                ('img_ext', models.CharField(blank=True, max_length=5, null=True)),
                ('img_rot', models.IntegerField(blank=True, null=True)),
                ('img_width', models.IntegerField(blank=True, null=True)),
                ('img_height', models.IntegerField(blank=True, null=True)),
                ('top', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('edit_time', models.DateTimeField()),
                ('top_time', models.DateTimeField()),
                ('del_field', models.IntegerField(db_column='del')),
            ],
            options={
                'db_table': 'swips_board_post_dev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsBoardReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=2)),
                ('participant', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('post_id', models.IntegerField()),
                ('root_type', models.IntegerField()),
                ('root_id', models.IntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
                ('edit_time', models.DateTimeField()),
                ('del_field', models.IntegerField(db_column='del')),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'swips_board_reply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsBoardReplyDev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=2)),
                ('participant', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('post_id', models.IntegerField()),
                ('root_type', models.IntegerField()),
                ('root_id', models.IntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
                ('edit_time', models.DateTimeField()),
                ('del_field', models.IntegerField(db_column='del')),
                ('language', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'swips_board_reply_dev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsClientVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
                ('desription', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_client_version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsCrawlingSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=45)),
                ('content_type', models.CharField(max_length=4)),
                ('sport', models.IntegerField()),
                ('language_cd', models.CharField(max_length=2)),
                ('frequency_cl', models.CharField(max_length=1)),
                ('importance_cl', models.CharField(max_length=1)),
                ('ut', models.DateTimeField()),
                ('del_field', models.IntegerField(db_column='del')),
            ],
            options={
                'db_table': 'swips_crawling_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('user_agent', models.CharField(max_length=255)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('ut', models.DateTimeField()),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=9, null=True)),
            ],
            options={
                'db_table': 'swips_feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsFixtures',
            fields=[
                ('elapsed', models.IntegerField(blank=True, null=True)),
                ('elapsed_plus', models.IntegerField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('status', models.PositiveIntegerField()),
                ('tournament_stage', models.PositiveIntegerField()),
                ('tournament', models.PositiveIntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('status_type', models.CharField(max_length=11)),
                ('team1', models.PositiveIntegerField(blank=True, null=True)),
                ('team2', models.PositiveIntegerField(blank=True, null=True)),
                ('event_team1', models.IntegerField(blank=True, null=True)),
                ('event_team2', models.IntegerField(blank=True, null=True)),
                ('team1_score', models.PositiveIntegerField()),
                ('team2_score', models.PositiveIntegerField()),
                ('team1_score_extra', models.PositiveIntegerField()),
                ('team2_score_extra', models.PositiveIntegerField()),
                ('team1_score_so', models.PositiveIntegerField()),
                ('team2_score_so', models.PositiveIntegerField()),
                ('round', models.CharField(blank=True, max_length=45, null=True)),
                ('stadium', models.CharField(blank=True, max_length=255, null=True)),
                ('referee', models.BigIntegerField()),
                ('gamestarted', models.DateTimeField(blank=True, null=True)),
                ('firsthalfended', models.DateTimeField(blank=True, null=True)),
                ('secondhalfstarted', models.DateTimeField(blank=True, null=True)),
                ('spectators', models.CharField(blank=True, max_length=255, null=True)),
                ('gameended', models.DateTimeField(blank=True, null=True)),
                ('secondhalfended', models.DateTimeField(blank=True, null=True)),
                ('exstarted', models.DateTimeField(blank=True, null=True)),
                ('ex2ended', models.DateTimeField(blank=True, null=True)),
                ('elapsedtime', models.BigIntegerField()),
            ],
            options={
                'db_table': 'swips_fixtures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsFixturesInfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('broadcast_id', models.CharField(blank=True, max_length=50, null=True)),
                ('broadcast_th', models.CharField(blank=True, max_length=50, null=True)),
                ('broadcast_vn', models.CharField(blank=True, max_length=50, null=True)),
                ('broadcast_br', models.CharField(blank=True, max_length=50, null=True)),
                ('broadcast_kr', models.CharField(blank=True, max_length=50, null=True)),
                ('broadcast_ph', models.CharField(blank=True, max_length=50, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'swips_fixtures_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsInjury',
            fields=[
                ('player', models.IntegerField(primary_key=True, serialize=False)),
                ('injury', models.CharField(blank=True, max_length=20, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('return_str', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'swips_injury',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsLeague',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('season', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.IntegerField(blank=True, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('sport', models.PositiveIntegerField(blank=True, null=True)),
                ('group_concat_ts_name_separator_field', models.TextField(blank=True, db_column="GROUP_CONCAT(ts.name SEPARATOR ',')", null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'swips_league',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsLeagueInfo',
            fields=[
                ('league', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name', models.CharField(blank=True, max_length=30, null=True)),
                ('short_name', models.CharField(blank=True, max_length=6, null=True)),
                ('name_ko', models.CharField(blank=True, max_length=50, null=True)),
                ('name_pt', models.CharField(blank=True, max_length=50, null=True)),
                ('name_th', models.CharField(blank=True, max_length=50, null=True)),
                ('name_id', models.CharField(blank=True, max_length=50, null=True)),
                ('name_vi', models.CharField(blank=True, max_length=50, null=True)),
                ('no_teams', models.IntegerField(blank=True, null=True)),
                ('founded', models.IntegerField(blank=True, null=True)),
                ('last_champion', models.IntegerField(blank=True, null=True)),
                ('social', models.CharField(blank=True, max_length=255, null=True)),
                ('social_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('social_pt', models.CharField(blank=True, max_length=255, null=True)),
                ('social_id', models.CharField(blank=True, max_length=255, null=True)),
                ('social_th', models.CharField(blank=True, max_length=255, null=True)),
                ('social_vi', models.CharField(blank=True, max_length=255, null=True)),
                ('social_en', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=6, null=True)),
                ('category', models.IntegerField(blank=True, null=True)),
                ('host', models.CharField(blank=True, max_length=20, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_league_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsLineupCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField()),
                ('team', models.IntegerField()),
                ('lineup_number', models.IntegerField(blank=True, null=True)),
                ('shirt_number', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=45)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_lineup_custom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref1', models.IntegerField(blank=True, null=True)),
                ('ref2', models.IntegerField(blank=True, null=True)),
                ('ref3', models.IntegerField(blank=True, null=True)),
                ('refstr1', models.CharField(blank=True, max_length=255, null=True)),
                ('refstr2', models.CharField(blank=True, max_length=255, null=True)),
                ('refstr3', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsMatchDetailCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField()),
                ('team_id', models.IntegerField()),
                ('lineup_number', models.IntegerField(blank=True, null=True)),
                ('shirt_number', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=45)),
                ('type', models.IntegerField()),
                ('minute', models.IntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_match_detail_custom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsMatchStat',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('player', models.PositiveIntegerField()),
                ('team', models.PositiveIntegerField(blank=True, null=True)),
                ('event_participant', models.PositiveIntegerField()),
                ('match', models.IntegerField(blank=True, null=True)),
                ('status_type', models.CharField(blank=True, max_length=11, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('data_type', models.TextField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('lineup_type', models.PositiveIntegerField()),
                ('shirt_number', models.PositiveIntegerField()),
                ('pos', models.IntegerField()),
            ],
            options={
                'db_table': 'swips_match_stat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsNationalTeamInfo',
            fields=[
                ('team', models.IntegerField(primary_key=True, serialize=False)),
                ('fifa_ranking', models.IntegerField()),
                ('wc_no_champions', models.IntegerField()),
                ('wc_appearance', models.IntegerField()),
                ('wc_best_result', models.CharField(max_length=13)),
                ('wc_last_result', models.CharField(max_length=13)),
            ],
            options={
                'db_table': 'swips_national_team_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_cd', models.CharField(blank=True, max_length=2, null=True)),
                ('link', models.CharField(blank=True, max_length=1024, null=True)),
                ('image_link', models.CharField(blank=True, max_length=255, null=True)),
                ('create_tmp', models.DateTimeField(blank=True, null=True)),
                ('is_top', models.IntegerField()),
                ('sport', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('source', models.CharField(blank=True, max_length=45, null=True)),
                ('is_frifee_content', models.IntegerField(blank=True, null=True)),
                ('pub_date', models.DateTimeField(blank=True, null=True)),
                ('following_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('pushed', models.IntegerField()),
                ('del_field', models.IntegerField(blank=True, db_column='del', null=True)),
            ],
            options={
                'db_table': 'swips_news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsNewsRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant', models.IntegerField()),
                ('news_id', models.IntegerField()),
                ('tmp', models.DateTimeField()),
                ('type', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'swips_news_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ut_from', models.DateTimeField()),
                ('ut_to', models.DateTimeField()),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('title_th', models.CharField(blank=True, max_length=50, null=True)),
                ('title_pt', models.CharField(blank=True, max_length=50, null=True)),
                ('title_ko', models.CharField(blank=True, max_length=50, null=True)),
                ('title_id', models.CharField(blank=True, max_length=50, null=True)),
                ('title_vi', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('message_th', models.TextField(blank=True, null=True)),
                ('message_pt', models.TextField(blank=True, null=True)),
                ('message_ko', models.TextField(blank=True, null=True)),
                ('message_id', models.TextField(blank=True, null=True)),
                ('message_vi', models.TextField(blank=True, null=True)),
                ('level', models.CharField(max_length=18)),
                ('client_version', models.IntegerField()),
                ('platform', models.CharField(blank=True, max_length=3, null=True)),
                ('include_lower_versions', models.CharField(blank=True, max_length=3, null=True)),
                ('active', models.CharField(blank=True, max_length=3, null=True)),
                ('include_upper_versions', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'swips_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsPlayer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('ut2', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('country', models.PositiveIntegerField()),
                ('date_of_birth', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('height', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.CharField(blank=True, max_length=255, null=True)),
                ('team', models.IntegerField(blank=True, null=True)),
                ('shirt_number', models.CharField(blank=True, max_length=255, null=True)),
                ('on_loan', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_player',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsPlayerInfo',
            fields=[
                ('player', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name', models.CharField(blank=True, max_length=30, null=True)),
                ('name_ko', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name_ko', models.CharField(blank=True, max_length=30, null=True)),
                ('name_th', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name_th', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.IntegerField(blank=True, null=True)),
                ('social', models.CharField(blank=True, max_length=255, null=True)),
                ('draft', models.CharField(blank=True, max_length=30, null=True)),
                ('school', models.CharField(blank=True, max_length=50, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_player_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsPlayerNational',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('country', models.PositiveIntegerField()),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('national_team', models.IntegerField()),
                ('team', models.IntegerField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
                ('shirt_number', models.CharField(blank=True, max_length=255, null=True)),
                ('on_loan', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_player_national',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsPoll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField()),
                ('number', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('participant', models.IntegerField(blank=True, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'swips_poll',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsPush',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('push_type', models.IntegerField()),
                ('table_name', models.CharField(max_length=45)),
                ('row_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('delayed_until', models.DateTimeField(blank=True, null=True)),
                ('ref1', models.IntegerField(blank=True, null=True)),
                ('ref2', models.IntegerField(blank=True, null=True)),
                ('ref3', models.IntegerField(blank=True, null=True)),
                ('ref4', models.IntegerField(blank=True, null=True)),
                ('ref5', models.IntegerField(blank=True, null=True)),
                ('refstr1', models.CharField(blank=True, max_length=10, null=True)),
                ('refstr2', models.CharField(blank=True, max_length=2048, null=True)),
                ('refstr3', models.CharField(blank=True, max_length=255, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_push',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsQna',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('user_agent', models.CharField(max_length=255)),
                ('language', models.CharField(blank=True, max_length=32, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('img_ext', models.CharField(blank=True, max_length=5, null=True)),
                ('img_rot', models.IntegerField(blank=True, null=True)),
                ('img_width', models.IntegerField(blank=True, null=True)),
                ('img_height', models.IntegerField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('answer_ut', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=9, null=True)),
                ('field_del', models.IntegerField(db_column='_del')),
            ],
            options={
                'db_table': 'swips_qna',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField()),
                ('player_id', models.IntegerField()),
                ('type', models.IntegerField()),
                ('rating', models.FloatField()),
                ('source', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'swips_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsRatingProperty',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('mom_id', models.IntegerField(blank=True, null=True)),
                ('mom_goal', models.IntegerField(blank=True, null=True)),
                ('mom_assist', models.IntegerField(blank=True, null=True)),
                ('mom_min', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'swips_rating_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsRedis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=7)),
                ('flw_id', models.IntegerField(blank=True, null=True)),
                ('flw_type', models.CharField(max_length=2)),
                ('language_cd', models.CharField(blank=True, max_length=2, null=True)),
                ('dml_type', models.CharField(max_length=8)),
                ('content_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('ut', models.DateTimeField()),
                ('ct', models.DateTimeField()),
                ('status_ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_redis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsReview',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sport', models.IntegerField()),
                ('league', models.IntegerField()),
                ('result', models.TextField(blank=True, null=True)),
                ('ut', models.DateTimeField()),
                ('standing', models.TextField(blank=True, null=True)),
                ('startdate', models.DateTimeField()),
                ('ct', models.DateTimeField()),
                ('pushed', models.IntegerField()),
            ],
            options={
                'db_table': 'swips_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsShortclip',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('match_id', models.IntegerField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('image_link', models.CharField(blank=True, max_length=255, null=True)),
                ('create_tmp', models.DateTimeField(blank=True, null=True)),
                ('is_top', models.IntegerField(blank=True, null=True)),
                ('sport', models.IntegerField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'swips_shortclip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsShortclipRelation',
            fields=[
                ('participant', models.IntegerField(primary_key=True, serialize=False)),
                ('shortclip_id', models.IntegerField()),
                ('tmp', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'swips_shortclip_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsStandingLiveTeam',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('team', models.IntegerField()),
                ('rank', models.PositiveIntegerField()),
                ('tournament', models.PositiveIntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('tournament_stage', models.IntegerField(blank=True, null=True)),
                ('standingfk', models.IntegerField(db_column='standingFK')),
                ('played', models.BigIntegerField(blank=True, null=True)),
                ('points', models.BigIntegerField(blank=True, null=True)),
                ('wins', models.BigIntegerField(blank=True, null=True)),
                ('draws', models.BigIntegerField(blank=True, null=True)),
                ('defeits', models.BigIntegerField(blank=True, null=True)),
                ('goalsfor', models.BigIntegerField(blank=True, null=True)),
                ('goalsagainst', models.BigIntegerField(blank=True, null=True)),
                ('div', models.CharField(max_length=255)),
                ('conf', models.CharField(max_length=255)),
                ('info', models.CharField(max_length=255)),
                ('percentage', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_standing_live_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsStandingPlayer23',
            fields=[
                ('player', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('team', models.IntegerField()),
                ('league', models.IntegerField()),
                ('gp', models.BigIntegerField(db_column='GP')),
                ('pts', models.DecimalField(db_column='PTS', decimal_places=0, max_digits=65)),
                ('ppg', models.DecimalField(db_column='PPG', decimal_places=4, max_digits=65)),
                ('fga', models.DecimalField(db_column='FGA', decimal_places=0, max_digits=65)),
                ('fg', models.DecimalField(db_column='FG', decimal_places=0, max_digits=65)),
                ('fgpct', models.DecimalField(db_column='FGPCT', decimal_places=4, max_digits=65)),
                ('number_3p', models.DecimalField(db_column='3P', decimal_places=0, max_digits=65)),
                ('number_3pa', models.DecimalField(db_column='3PA', decimal_places=0, max_digits=65)),
                ('number_3ppct', models.DecimalField(db_column='3PPCT', decimal_places=4, max_digits=65)),
                ('ft', models.DecimalField(db_column='FT', decimal_places=0, max_digits=65)),
                ('fta', models.DecimalField(db_column='FTA', decimal_places=0, max_digits=65)),
                ('ftpct', models.DecimalField(db_column='FTPCT', decimal_places=4, max_digits=65)),
                ('ast', models.DecimalField(db_column='AST', decimal_places=0, max_digits=65)),
                ('apg', models.DecimalField(db_column='APG', decimal_places=4, max_digits=65)),
                ('pf', models.DecimalField(db_column='PF', decimal_places=0, max_digits=65)),
                ('tf', models.DecimalField(db_column='TF', decimal_places=0, max_digits=65)),
                ('blk', models.DecimalField(db_column='BLK', decimal_places=0, max_digits=65)),
                ('bpg', models.DecimalField(db_column='BPG', decimal_places=4, max_digits=65)),
                ('to', models.DecimalField(db_column='TO', decimal_places=0, max_digits=65)),
                ('stl', models.DecimalField(db_column='STL', decimal_places=0, max_digits=65)),
                ('spg', models.DecimalField(db_column='SPG', decimal_places=4, max_digits=65)),
                ('oreb', models.DecimalField(db_column='OREB', decimal_places=0, max_digits=65)),
                ('dreb', models.DecimalField(db_column='DREB', decimal_places=0, max_digits=65)),
                ('rpg', models.DecimalField(blank=True, db_column='RPG', decimal_places=4, max_digits=65, null=True)),
                ('sec', models.DecimalField(db_column='SEC', decimal_places=0, max_digits=65)),
                ('playedpct', models.DecimalField(blank=True, db_column='playedPCT', decimal_places=4, max_digits=24, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_standing_player_23',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsStandingPlayer26Bat',
            fields=[
                ('player', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('team', models.IntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('avg', models.DecimalField(blank=True, db_column='AVG', decimal_places=4, max_digits=65, null=True)),
                ('obp', models.DecimalField(blank=True, db_column='OBP', decimal_places=4, max_digits=65, null=True)),
                ('slg', models.DecimalField(blank=True, db_column='SLG', decimal_places=4, max_digits=65, null=True)),
                ('ops', models.DecimalField(blank=True, db_column='OPS', decimal_places=4, max_digits=65, null=True)),
                ('ab', models.DecimalField(db_column='AB', decimal_places=0, max_digits=65)),
                ('r', models.DecimalField(db_column='R', decimal_places=0, max_digits=65)),
                ('hr', models.DecimalField(db_column='HR', decimal_places=0, max_digits=65)),
                ('rbi', models.DecimalField(db_column='RBI', decimal_places=0, max_digits=65)),
                ('bb', models.DecimalField(db_column='BB', decimal_places=0, max_digits=65)),
                ('so', models.DecimalField(db_column='SO', decimal_places=0, max_digits=65)),
                ('sb', models.DecimalField(db_column='SB', decimal_places=0, max_digits=65)),
                ('h', models.DecimalField(db_column='H', decimal_places=0, max_digits=65)),
                ('sech', models.DecimalField(db_column='SECH', decimal_places=0, max_digits=65)),
                ('secf', models.DecimalField(db_column='SECF', decimal_places=0, max_digits=65)),
                ('hbp', models.DecimalField(db_column='HBP', decimal_places=0, max_digits=65)),
                ('playedpct', models.DecimalField(blank=True, db_column='playedPCT', decimal_places=4, max_digits=65, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_standing_player_26_bat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsStandingPlayer26Pit',
            fields=[
                ('player', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('team', models.IntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('era', models.DecimalField(blank=True, db_column='ERA', decimal_places=4, max_digits=65, null=True)),
                ('whip', models.DecimalField(blank=True, db_column='WHIP', decimal_places=4, max_digits=65, null=True)),
                ('w', models.DecimalField(db_column='W', decimal_places=0, max_digits=65)),
                ('l', models.DecimalField(db_column='L', decimal_places=0, max_digits=65)),
                ('outs', models.DecimalField(db_column='OUTS', decimal_places=0, max_digits=65)),
                ('nodeci', models.DecimalField(db_column='NODECI', decimal_places=0, max_digits=65)),
                ('hold', models.DecimalField(db_column='HOLD', decimal_places=0, max_digits=65)),
                ('sv', models.DecimalField(db_column='SV', decimal_places=0, max_digits=65)),
                ('svb', models.DecimalField(db_column='SVB', decimal_places=0, max_digits=65)),
                ('h', models.DecimalField(db_column='H', decimal_places=0, max_digits=65)),
                ('r', models.DecimalField(db_column='R', decimal_places=0, max_digits=65)),
                ('er', models.DecimalField(db_column='ER', decimal_places=0, max_digits=65)),
                ('bb', models.DecimalField(db_column='BB', decimal_places=0, max_digits=65)),
                ('so', models.DecimalField(db_column='SO', decimal_places=0, max_digits=65)),
                ('hr', models.DecimalField(db_column='HR', decimal_places=0, max_digits=65)),
                ('gp', models.DecimalField(db_column='GP', decimal_places=0, max_digits=23)),
                ('gs', models.DecimalField(db_column='GS', decimal_places=0, max_digits=23)),
                ('playedpct', models.DecimalField(blank=True, db_column='playedPCT', decimal_places=8, max_digits=65, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_standing_player_26_pit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsStandingTeam',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('team', models.IntegerField()),
                ('rank', models.PositiveIntegerField()),
                ('tournament', models.PositiveIntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('tournament_stage', models.IntegerField(blank=True, null=True)),
                ('standingfk', models.IntegerField(db_column='standingFK')),
                ('played', models.BigIntegerField(blank=True, null=True)),
                ('points', models.BigIntegerField(blank=True, null=True)),
                ('wins', models.BigIntegerField(blank=True, null=True)),
                ('draws', models.BigIntegerField(blank=True, null=True)),
                ('defeits', models.BigIntegerField(blank=True, null=True)),
                ('goalsfor', models.BigIntegerField(blank=True, null=True)),
                ('goalsagainst', models.BigIntegerField(blank=True, null=True)),
                ('div', models.CharField(max_length=255)),
                ('conf', models.CharField(max_length=255)),
                ('info', models.CharField(max_length=255)),
                ('percentage', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_standing_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsStandingTeam2',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('team', models.IntegerField()),
                ('rank', models.PositiveIntegerField()),
                ('tournament', models.PositiveIntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('tournament_stage', models.IntegerField(blank=True, null=True)),
                ('standingfk', models.IntegerField(db_column='standingFK')),
                ('played', models.BigIntegerField(blank=True, null=True)),
                ('points', models.BigIntegerField(blank=True, null=True)),
                ('wins', models.BigIntegerField(blank=True, null=True)),
                ('draws', models.BigIntegerField(blank=True, null=True)),
                ('defeits', models.BigIntegerField(blank=True, null=True)),
                ('goalsfor', models.BigIntegerField(blank=True, null=True)),
                ('goalsagainst', models.BigIntegerField(blank=True, null=True)),
                ('div', models.CharField(max_length=255)),
                ('conf', models.CharField(max_length=255)),
                ('info', models.CharField(max_length=255)),
                ('percentage', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_standing_team2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsStandingTeamTemp',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('team', models.IntegerField()),
                ('rank', models.PositiveIntegerField()),
                ('tournament', models.PositiveIntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('tournament_stage', models.IntegerField(blank=True, null=True)),
                ('standingfk', models.IntegerField(db_column='standingFK')),
                ('played', models.BigIntegerField(blank=True, null=True)),
                ('points', models.BigIntegerField(blank=True, null=True)),
                ('wins', models.BigIntegerField(blank=True, null=True)),
                ('draws', models.BigIntegerField(blank=True, null=True)),
                ('defeits', models.BigIntegerField(blank=True, null=True)),
                ('goalsfor', models.BigIntegerField(blank=True, null=True)),
                ('goalsagainst', models.BigIntegerField(blank=True, null=True)),
                ('div', models.CharField(max_length=255)),
                ('conf', models.CharField(max_length=255)),
                ('info', models.CharField(max_length=255)),
                ('percentage', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'swips_standing_team_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsTeam',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('country', models.PositiveIntegerField()),
                ('isnationalteam', models.CharField(blank=True, db_column='IsNationalTeam', max_length=255, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('ut2', models.DateTimeField(blank=True, null=True)),
                ('homepage', models.CharField(blank=True, db_column='HomePage', max_length=255, null=True)),
                ('division', models.CharField(max_length=255)),
                ('stadium', models.CharField(blank=True, max_length=255, null=True)),
                ('capacity', models.BigIntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('league', models.IntegerField(blank=True, null=True)),
                ('league_category', models.PositiveIntegerField(blank=True, null=True)),
                ('tournament_stage', models.PositiveIntegerField(blank=True, null=True)),
                ('game_played', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'swips_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsTeamInfo',
            fields=[
                ('team', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name', models.CharField(blank=True, max_length=30, null=True)),
                ('short_name', models.CharField(blank=True, max_length=5, null=True)),
                ('name_ko', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name_ko', models.CharField(blank=True, max_length=30, null=True)),
                ('name_th', models.CharField(blank=True, max_length=50, null=True)),
                ('mid_name_th', models.CharField(blank=True, max_length=30, null=True)),
                ('color', models.CharField(blank=True, max_length=6, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('founded', models.IntegerField(blank=True, null=True)),
                ('last_rank', models.CharField(blank=True, max_length=30, null=True)),
                ('no_champions', models.IntegerField(blank=True, null=True)),
                ('manager', models.CharField(blank=True, max_length=50, null=True)),
                ('manager_ko', models.CharField(blank=True, max_length=50, null=True)),
                ('manager_th', models.CharField(blank=True, max_length=50, null=True)),
                ('social', models.CharField(blank=True, max_length=255, null=True)),
                ('social_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('social_pt', models.CharField(blank=True, max_length=255, null=True)),
                ('social_id', models.CharField(blank=True, max_length=255, null=True)),
                ('social_th', models.CharField(blank=True, max_length=255, null=True)),
                ('social_vi', models.CharField(blank=True, max_length=255, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'swips_team_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.IntegerField()),
                ('player_id', models.IntegerField()),
                ('player_name', models.CharField(blank=True, max_length=45, null=True)),
                ('position', models.CharField(blank=True, max_length=10, null=True)),
                ('from_team_id', models.IntegerField()),
                ('from_team_name', models.CharField(blank=True, max_length=45, null=True)),
                ('to_team_id', models.IntegerField()),
                ('to_team_name', models.CharField(blank=True, max_length=45, null=True)),
                ('is_loan', models.IntegerField()),
                ('type', models.CharField(max_length=8)),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('source_th', models.CharField(blank=True, max_length=255, null=True)),
                ('source_pt', models.CharField(blank=True, max_length=255, null=True)),
                ('source_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('source_vi', models.CharField(blank=True, max_length=255, null=True)),
                ('source_en', models.CharField(blank=True, max_length=255, null=True)),
                ('ut', models.DateTimeField()),
                ('contract_dt', models.DateField()),
                ('contract_info', models.CharField(max_length=8)),
                ('fee', models.BigIntegerField()),
                ('fee_info', models.CharField(max_length=8)),
                ('fee_currency', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'swips_transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=45, null=True, unique=True)),
                ('country', models.CharField(blank=True, max_length=3, null=True)),
                ('user_token', models.CharField(blank=True, max_length=45, null=True)),
                ('fb_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('create_tmp', models.DateTimeField(blank=True, null=True)),
                ('data_level', models.IntegerField(blank=True, null=True)),
                ('following_noti_level', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=25, null=True)),
                ('os', models.CharField(blank=True, max_length=10, null=True)),
                ('push_key', models.CharField(blank=True, max_length=1023, null=True)),
                ('aws_endpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.IntegerField(blank=True, db_column='del', null=True)),
            ],
            options={
                'db_table': 'swips_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsUserBase',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('create_tmp', models.DateTimeField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=25, null=True)),
                ('os', models.CharField(blank=True, max_length=10, null=True)),
                ('push_key', models.CharField(blank=True, max_length=1023, null=True)),
                ('aws_endpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('del_field', models.IntegerField(blank=True, db_column='del', null=True)),
            ],
            options={
                'db_table': 'swips_user_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsUserFollowing',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('following', models.IntegerField()),
                ('type', models.CharField(max_length=2)),
                ('dt', models.DateTimeField()),
                ('aws_subscription', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(max_length=5)),
                ('push_type', models.IntegerField()),
            ],
            options={
                'db_table': 'swips_user_following',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsUserInfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
                ('password', models.CharField(blank=True, max_length=64, null=True)),
                ('pf', models.CharField(blank=True, max_length=8, null=True)),
                ('pf_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('pf_user_name', models.CharField(blank=True, max_length=64, null=True)),
                ('pf_user_token', models.CharField(blank=True, max_length=2048, null=True)),
                ('pf_image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('email_confirmed', models.CharField(blank=True, max_length=3, null=True)),
                ('secret_key', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'swips_user_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsUserTs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_info_id', models.IntegerField()),
                ('login_ut', models.DateTimeField(blank=True, null=True)),
                ('logout_ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'swips_user_ts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsVod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('image_link', models.CharField(blank=True, max_length=255, null=True)),
                ('create_tmp', models.DateTimeField(blank=True, null=True)),
                ('is_top', models.IntegerField(blank=True, null=True)),
                ('sport', models.IntegerField(blank=True, null=True)),
                ('country_cd', models.CharField(blank=True, max_length=2, null=True)),
                ('language_cd', models.CharField(blank=True, max_length=2, null=True)),
                ('title', models.CharField(blank=True, max_length=127, null=True)),
                ('source', models.CharField(blank=True, max_length=45, null=True)),
                ('pub_date', models.DateTimeField(blank=True, null=True)),
                ('following_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('is_frifee_content', models.IntegerField(blank=True, null=True)),
                ('pushed', models.IntegerField()),
                ('country_exclude_cd', models.CharField(blank=True, max_length=45, null=True)),
                ('del_field', models.IntegerField(blank=True, db_column='del', null=True)),
                ('is_live', models.IntegerField()),
            ],
            options={
                'db_table': 'swips_vod',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwipsVodRelation',
            fields=[
                ('participant', models.IntegerField(primary_key=True, serialize=False)),
                ('vod_id', models.IntegerField()),
                ('tmp', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'swips_vod_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempTu02User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'temp_tu02_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ThompsonImageSourcePlayer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('license', models.CharField(blank=True, max_length=30, null=True)),
                ('author', models.CharField(blank=True, max_length=50, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'thompson_image_source_player',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ThompsonStandingColorInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('color_type', models.IntegerField()),
                ('ut', models.DateTimeField()),
            ],
            options={
                'db_table': 'thompson_standing_color_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('tournament_templatefk', models.PositiveIntegerField(db_column='tournament_templateFK')),
                ('enetseasonid', models.PositiveIntegerField(db_column='enetSeasonID')),
                ('n', models.PositiveIntegerField()),
                ('locked', models.CharField(blank=True, max_length=4, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'tournament',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('tournamentfk', models.PositiveIntegerField(db_column='tournamentFK')),
                ('gender', models.CharField(max_length=9)),
                ('countryfk', models.IntegerField(db_column='countryFK')),
                ('enetid', models.PositiveIntegerField(db_column='enetID')),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('n', models.PositiveIntegerField()),
                ('locked', models.CharField(blank=True, max_length=4, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'tournament_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sportfk', models.PositiveIntegerField(db_column='sportFK')),
                ('gender', models.CharField(max_length=9)),
                ('enetid', models.PositiveIntegerField(db_column='enetID')),
                ('n', models.PositiveIntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
            ],
            options={
                'db_table': 'tournament_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('countryfk', models.IntegerField(blank=True, db_column='countryFK', null=True)),
                ('venue_typefk', models.IntegerField(db_column='venue_typeFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'venue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VenueData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('venue_data_typefk', models.IntegerField(db_column='venue_data_typeFK')),
                ('venuefk', models.IntegerField(db_column='venueFK')),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'venue_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VenueDataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'venue_data_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VenueObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_typefk', models.IntegerField(db_column='object_typeFK')),
                ('objectfk', models.IntegerField(db_column='objectFK')),
                ('venuefk', models.PositiveIntegerField(db_column='venueFK')),
                ('neutral', models.CharField(max_length=3)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'venue_object',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VenueType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('del_field', models.CharField(db_column='del', max_length=3)),
                ('n', models.IntegerField()),
                ('ut', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'venue_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorldPeacePor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('tournament', models.IntegerField()),
                ('league', models.IntegerField()),
                ('player', models.IntegerField()),
                ('lineup_type', models.IntegerField()),
                ('position', models.IntegerField()),
                ('rating', models.FloatField()),
            ],
            options={
                'db_table': 'world_peace_por',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorldPeacePorInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('tournament', models.IntegerField()),
                ('league', models.IntegerField()),
                ('por_status', models.CharField(blank=True, max_length=9, null=True)),
                ('round_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'world_peace_por_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorldPeacePreview',
            fields=[
                ('match_id', models.IntegerField(primary_key=True, serialize=False)),
                ('match_info', models.CharField(blank=True, max_length=45, null=True)),
                ('team1', models.IntegerField(blank=True, null=True)),
                ('team2', models.IntegerField(blank=True, null=True)),
                ('match_date', models.DateTimeField(blank=True, null=True)),
                ('team1_rank', models.CharField(blank=True, max_length=45, null=True)),
                ('team2_rank', models.CharField(blank=True, max_length=45, null=True)),
                ('team1_win', models.IntegerField(blank=True, null=True)),
                ('team2_win', models.IntegerField(blank=True, null=True)),
                ('team1_draw', models.IntegerField(blank=True, null=True)),
                ('team2_draw', models.IntegerField(blank=True, null=True)),
                ('team1_defeit', models.IntegerField(blank=True, null=True)),
                ('team2_defeit', models.IntegerField(blank=True, null=True)),
                ('team1_pts', models.IntegerField(blank=True, null=True)),
                ('team2_pts', models.IntegerField(blank=True, null=True)),
                ('team1_result', models.CharField(blank=True, max_length=45, null=True)),
                ('team2_result', models.CharField(blank=True, max_length=45, null=True)),
                ('team1_goals_per_game', models.FloatField(blank=True, null=True)),
                ('team2_goals_per_game', models.FloatField(blank=True, null=True)),
                ('team1_goals_per_game_5', models.FloatField(blank=True, null=True)),
                ('team2_goals_per_game_5', models.FloatField(blank=True, null=True)),
                ('team1_goals_against_per_game', models.FloatField(blank=True, null=True)),
                ('team2_goals_against_per_game', models.FloatField(blank=True, null=True)),
                ('team1_goals_against_per_game_5', models.FloatField(blank=True, null=True)),
                ('team2_goals_against_per_game_5', models.FloatField(blank=True, null=True)),
                ('team1_key_player', models.IntegerField(blank=True, null=True)),
                ('team2_key_player', models.IntegerField(blank=True, null=True)),
                ('team1_key_player_goal', models.IntegerField(blank=True, null=True)),
                ('team2_key_player_goal', models.IntegerField(blank=True, null=True)),
                ('team1_key_player_assist', models.IntegerField(blank=True, null=True)),
                ('team2_key_player_assist', models.IntegerField(blank=True, null=True)),
                ('team1_top_player', models.CharField(blank=True, max_length=45, null=True)),
                ('team2_top_player', models.CharField(blank=True, max_length=45, null=True)),
                ('team1_top_player_stat', models.CharField(blank=True, max_length=45, null=True)),
                ('team2_top_player_stat', models.CharField(blank=True, max_length=45, null=True)),
                ('team1_top_player_stat_per', models.CharField(blank=True, max_length=45, null=True)),
                ('team2_top_player_stat_per', models.CharField(blank=True, max_length=45, null=True)),
                ('team1_injuries', models.CharField(blank=True, max_length=45, null=True)),
                ('team2_injuries', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.CharField(max_length=9)),
                ('type', models.IntegerField()),
                ('league', models.IntegerField()),
            ],
            options={
                'db_table': 'world_peace_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorldPeaceStandingPlayerParticipant1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.IntegerField()),
                ('rank', models.PositiveIntegerField()),
                ('tournament', models.PositiveIntegerField(blank=True, null=True)),
                ('league', models.IntegerField()),
                ('played', models.BigIntegerField()),
                ('goals', models.BigIntegerField()),
                ('assists', models.BigIntegerField()),
                ('team', models.BigIntegerField()),
                ('ycards', models.BigIntegerField()),
                ('cleansheets', models.BigIntegerField()),
                ('conceded', models.BigIntegerField()),
                ('playedlineup', models.BigIntegerField()),
                ('min', models.BigIntegerField()),
            ],
            options={
                'db_table': 'world_peace_standing_player_participant_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorldPeicePlayerRecent5Games',
            fields=[
                ('match_id', models.IntegerField(primary_key=True, serialize=False)),
                ('league', models.IntegerField(blank=True, null=True)),
                ('player', models.IntegerField(blank=True, null=True)),
                ('player_team', models.IntegerField(blank=True, null=True)),
                ('goal', models.IntegerField(blank=True, null=True)),
                ('assist', models.IntegerField(blank=True, null=True)),
                ('point', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'world_peice_player_recent_5games',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpFixtures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.IntegerField(blank=True, null=True, unique=True)),
                ('tournament', models.IntegerField(blank=True, null=True)),
                ('league', models.IntegerField(blank=True, null=True)),
                ('round', models.IntegerField(blank=True, null=True)),
                ('team1', models.IntegerField(blank=True, null=True)),
                ('team2', models.IntegerField(blank=True, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('p_type', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('pushed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wp_fixtures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpInjuries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.IntegerField(blank=True, null=True)),
                ('match', models.IntegerField(blank=True, null=True)),
                ('team', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wp_injuries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpKeyPl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField()),
                ('team', models.IntegerField()),
                ('player', models.IntegerField()),
                ('goals', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('rating', models.FloatField()),
                ('played', models.IntegerField()),
                ('n', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_key_pl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpTeamStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField(blank=True, null=True)),
                ('team', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('win', models.IntegerField(blank=True, null=True)),
                ('draw', models.IntegerField(blank=True, null=True)),
                ('defeit', models.IntegerField(blank=True, null=True)),
                ('pts', models.IntegerField(blank=True, null=True)),
                ('games', models.IntegerField(blank=True, null=True)),
                ('prev_rank', models.CharField(blank=True, max_length=32, null=True)),
                ('prev_result', models.CharField(blank=True, max_length=32, null=True)),
                ('goals', models.IntegerField(blank=True, null=True)),
                ('goals_re', models.FloatField(blank=True, null=True)),
                ('ga_s', models.IntegerField(blank=True, null=True)),
                ('ga_s_re', models.FloatField(blank=True, null=True)),
                ('ratings', models.FloatField(blank=True, null=True)),
                ('ratings_re', models.FloatField(blank=True, null=True)),
                ('n', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wp_team_stat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpTopPl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField(blank=True, null=True)),
                ('team', models.IntegerField(blank=True, null=True)),
                ('player', models.IntegerField(blank=True, null=True)),
                ('stat_type', models.CharField(blank=True, max_length=7, null=True)),
                ('stat', models.FloatField(blank=True, null=True)),
                ('avg_stat', models.FloatField(blank=True, null=True)),
                ('n', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wp_top_pl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament', models.IntegerField(blank=True, null=True)),
                ('team', models.IntegerField(blank=True, null=True)),
                ('player', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=10, null=True)),
                ('active', models.CharField(blank=True, max_length=3, null=True)),
                ('ut', models.DateTimeField(blank=True, null=True)),
                ('del_field', models.IntegerField(db_column='del')),
            ],
            options={
                'db_table': 'wp_transfer',
                'managed': False,
            },
        ),
    ]
